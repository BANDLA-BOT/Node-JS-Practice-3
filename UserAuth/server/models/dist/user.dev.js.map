{"version":3,"sources":["user.js"],"names":["mongoose","require","jwt","Joi","passwordComplexity","userSchema","Schema","firstName","type","String","required","lastName","email","password","methods","generateAuthToken","token","sign","_id","process","env","ACCESS_KEY","expiresIn","User","model","validate","data","schema","object","string","label","module","exports"],"mappings":";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMC,GAAG,GAAED,OAAO,CAAC,cAAD,CAAlB;;AACA,IAAME,GAAG,GAAGF,OAAO,CAAC,KAAD,CAAnB;;AACA,IAAMG,kBAAkB,GAAGH,OAAO,CAAC,yBAAD,CAAlC;;AAGA,IAAMI,UAAU,GAAG,IAAIL,QAAQ,CAACM,MAAb,CAAoB;AACnCC,EAAAA,SAAS,EAAC;AAACC,IAAAA,IAAI,EAACC,MAAN;AAAcC,IAAAA,QAAQ,EAAC;AAAvB,GADyB;AAEnCC,EAAAA,QAAQ,EAAC;AAACH,IAAAA,IAAI,EAACC,MAAN;AAAcC,IAAAA,QAAQ,EAAC;AAAvB,GAF0B;AAGnCE,EAAAA,KAAK,EAAC;AAACJ,IAAAA,IAAI,EAACC,MAAN;AAAcC,IAAAA,QAAQ,EAAC;AAAvB,GAH6B;AAInCG,EAAAA,QAAQ,EAAC;AAACL,IAAAA,IAAI,EAACC,MAAN;AAAcC,IAAAA,QAAQ,EAAC;AAAvB;AAJ0B,CAApB,CAAnB;;AAQAL,UAAU,CAACS,OAAX,CAAmBC,iBAAnB,GAAsC,YAAU;AAC5C,MAAMC,KAAK,GAAGd,GAAG,CAACe,IAAJ,CAAS;AAACC,IAAAA,GAAG,EAAC,KAAKA;AAAV,GAAT,EAAyBC,OAAO,CAACC,GAAR,CAAYC,UAArC,EAAiD;AAACC,IAAAA,SAAS,EAAC;AAAX,GAAjD,CAAd;AACA,SAAON,KAAP;AACH,CAHD;;AAIA,IAAMO,IAAI,GAAGvB,QAAQ,CAACwB,KAAT,CAAe,MAAf,EAAuBnB,UAAvB,CAAb;;AAEA,IAAMoB,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAQ;AACrB,MAAMC,MAAM,GAAGxB,GAAG,CAACyB,MAAJ,CAAW;AACtBrB,IAAAA,SAAS,EAACJ,GAAG,CAAC0B,MAAJ,GAAanB,QAAb,GAAwBoB,KAAxB,CAA8B,YAA9B,CADY;AAEtBnB,IAAAA,QAAQ,EAACR,GAAG,CAAC0B,MAAJ,GAAanB,QAAb,GAAwBoB,KAAxB,CAA8B,WAA9B,CAFa;AAGtBlB,IAAAA,KAAK,EAACT,GAAG,CAAC0B,MAAJ,GAAanB,QAAb,GAAwBoB,KAAxB,CAA8B,OAA9B,CAHgB;AAItBjB,IAAAA,QAAQ,EAACT,kBAAkB,GAAGM,QAArB,GAAgCoB,KAAhC,CAAsC,UAAtC;AAJa,GAAX,CAAf;AAMA,SAAOH,MAAM,CAACF,QAAP,CAAgBC,IAAhB,CAAP;AACH,CARD;;AASAK,MAAM,CAACC,OAAP,GAAiB;AAACT,EAAAA,IAAI,EAAJA,IAAD;AAAOE,EAAAA,QAAQ,EAARA;AAAP,CAAjB","sourcesContent":["const mongoose = require('mongoose');\r\nconst jwt =require('jsonwebtoken')\r\nconst Joi = require('joi');\r\nconst passwordComplexity = require('joi-password-complexity')\r\n\r\n\r\nconst userSchema = new mongoose.Schema({\r\n    firstName:{type:String, required:true},\r\n    lastName:{type:String, required:true},\r\n    email:{type:String, required:true},\r\n    password:{type:String, required:true}\r\n});\r\n\r\n\r\nuserSchema.methods.generateAuthToken =function(){\r\n    const token = jwt.sign({_id:this._id}, process.env.ACCESS_KEY, {expiresIn:\"7d\"})\r\n    return token\r\n}\r\nconst User = mongoose.model(\"user\", userSchema)\r\n\r\nconst validate = (data)=>{\r\n    const schema = Joi.object({\r\n        firstName:Joi.string().required().label(\"First name\"),\r\n        lastName:Joi.string().required().label(\"Last name\"),\r\n        email:Joi.string().required().label(\"Email\"),\r\n        password:passwordComplexity().required().label(\"Password\")\r\n    })\r\n    return schema.validate(data)\r\n}\r\nmodule.exports = {User, validate}"],"file":"user.dev.js"}